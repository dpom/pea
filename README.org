#+TITLE: PEA
#+DESCRIPTION: Personal Education Assistent
#+STARTUP: overview

* Description

PEA (Personal Educational Assistant) it is an assistance tool for both searching a library
"HOWTOs" and to deepen the study on a particular area.

* Installation 

Using a docker image  is the fastest way to get up and running the PEA application.

** Docker

If you don't have already installed you could install docker using the instructions from their site: 

 https://docs.docker.com/engine/getstarted/step_one/#install-docker 

** Configuration File

Create a configuration file in an accesible read-write folder. For example, I use: =~/tmp/config/config.edn=.
A minimal content of this file is:
#+BEGIN_SRC clojure
{:yetibot
 {:db {:datomic-url "datomic:mem://pea"}
  :type :demo
  :adapters
  [{:name "freenode-irc",
    :type :irc,
    :host "chat.freenode.net",
    :port "6665",
    :username "pea_yetibot"
    :rooms #{"#pea" "#yetibot"}}]
  }
}
#+END_SRC

** Load and Run the Application

From a console terminal run the command:
#+BEGIN_SRC sh
docker run --name pea \
  -d -p 3000:3000 \
  -v ~/tmp/config:/usr/src/app/config \
  dpom/pea:1.0.0
#+END_SRC

If you want to see the application logs type:
#+BEGIN_SRC sh
docker logs -f pea
#+END_SRC
 
** IRC Client 

Open an IRC client, connect to =irc.freenode.net= and join the =#pea= room.

* Usage

All pea (and yetibot) commands start with an exclamation mark. 

** HowTo

The first group of commands  =qht= and  =howto= use to access a
HOWTOs library.

By HOWTO I understand a short text explaining a design pattern, an
algorithm, a command syntax or any other useful text, I use
rarely as not to remain in active memory.

In the database a howto item have an identifier (ex =clj101=), a title, and a text.

=qht= (querry howto) search  in the database all the howto items  which contains all the given keywords. Up to 3 words could be use.
For example if you want to find the linux command to list the first 10 sub-directories size ordered a possible command could be:
#+BEGIN_SRC sh
!qht linux find biggest
#+END_SRC

=howto= search an howto item using his identifier. For example:
#+BEGIN_SRC sh
!howto clj103
#+END_SRC

** Study

The =study= and =response= commands are used for assisted individual study.

In the database a study item have an identifier (ex =hist101=), a text, and a question with 2 answers.
User "navigate" through study items depending on the answers he gave.



* Setup                                                              :noexport:
#+AUTHOR:    Dan Pomohaci
#+EMAIL:     dan.pomohaci@gmail.com
#+LANGUAGE:  en
#+OPTIONS:   H:5 num:t toc:t \n:nil @:t ::t |:t ^:{} -:nil f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:nil pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: noexport
#+LATEX_CLASS: dpom-spec
#+LATEX_HEADER: \usepackage[hmargin=2cm,top=4cm,headheight=65pt,footskip=65pt]{geometry}
#+LaTeX_HEADER: \renewcommand{\headrulewidth}{0pt}
#+LaTeX_HEADER: \renewcommand{\footrulewidth}{0pt}
#+LaTeX_HEADER: \newcommand{\docVersion}{0.1}
#+LaTeX_HEADER: \newcommand{\docTitle}{PEA}
#+LaTeX_HEADER: \newcommand{\docSubTitle}{Personal Education Assistent}
#+LaTeX_HEADER: \fancyhead[CE,CO,LE,LO,RE,RO]{} %% clear out all headers
#+LaTeX_HEADER: \fancyhead[C]{\begin{tabular}{|m{3.0cm}|m{10.0cm}|m{2.5cm}|} \hline & \centering \Large{\docTitle{} - \docSubTitle{}} & \centering \tiny{\ Data: {\today}\ Rev. \docVersion}\tabularnewline \hline \end{tabular}}
#+LaTeX_HEADER: \fancyfoot[CE,CO,LE,LO,RE,RO]{} %% clear out all footers
#+LaTeX_HEADER: \fancyfoot[C]{\begin{tabular}{|m{3.0cm}|m{10.0cm}|m{2.5cm}|} \hline  & \centering \small{} & \centering \small{Page \thepage\ of \pageref{LastPage}}\tabularnewline \hline \end{tabular}}
#+LATEX_HEADER: \input{doc/mytitle}
